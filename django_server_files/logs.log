2025-02-05T13:01:12.096+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.239+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.240+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.240+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.240+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.241+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.241+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.241+00:00 [DEBUG] CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
2025-02-05T13:01:27.241+00:00 [DEBUG] (0.000) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.241+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.247+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.247+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.248+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.249+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.249+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.251+00:00 [DEBUG] CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
2025-02-05T13:01:27.252+00:00 [DEBUG] (0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.256+00:00 [DEBUG] CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
2025-02-05T13:01:27.256+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
2025-02-05T13:01:27.257+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.258+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2025-02-05 13:01:27.257531') RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', '2025-02-05 13:01:27.257531'); alias=default
2025-02-05T13:01:27.258+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.265+00:00 [DEBUG] (0.007) COMMIT; args=None; alias=default
2025-02-05T13:01:27.266+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.266+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.266+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.266+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.269+00:00 [DEBUG] CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
2025-02-05T13:01:27.270+00:00 [DEBUG] (0.000) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.273+00:00 [DEBUG] CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
2025-02-05T13:01:27.273+00:00 [DEBUG] (0.000) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
2025-02-05T13:01:27.273+00:00 [DEBUG] CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-02-05T13:01:27.274+00:00 [DEBUG] (0.000) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-02-05T13:01:27.279+00:00 [DEBUG] CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); (params None)
2025-02-05T13:01:27.279+00:00 [DEBUG] (0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.280+00:00 [DEBUG] CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-02-05T13:01:27.280+00:00 [DEBUG] (0.000) CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-02-05T13:01:27.281+00:00 [DEBUG] CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-02-05T13:01:27.281+00:00 [DEBUG] (0.000) CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-02-05T13:01:27.281+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.281+00:00 [DEBUG] CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
2025-02-05T13:01:27.281+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
2025-02-05T13:01:27.281+00:00 [DEBUG] CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
2025-02-05T13:01:27.281+00:00 [DEBUG] (0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
2025-02-05T13:01:27.281+00:00 [DEBUG] CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
2025-02-05T13:01:27.282+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); args=(); alias=default
2025-02-05T13:01:27.282+00:00 [DEBUG] CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
2025-02-05T13:01:27.282+00:00 [DEBUG] (0.000) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=(); alias=default
2025-02-05T13:01:27.282+00:00 [DEBUG] CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
2025-02-05T13:01:27.282+00:00 [DEBUG] (0.000) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=(); alias=default
2025-02-05T13:01:27.282+00:00 [DEBUG] CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); (params ())
2025-02-05T13:01:27.282+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); args=(); alias=default
2025-02-05T13:01:27.282+00:00 [DEBUG] CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params ())
2025-02-05T13:01:27.282+00:00 [DEBUG] (0.000) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=(); alias=default
2025-02-05T13:01:27.282+00:00 [DEBUG] CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params ())
2025-02-05T13:01:27.283+00:00 [DEBUG] (0.000) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=(); alias=default
2025-02-05T13:01:27.283+00:00 [DEBUG] CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); (params ())
2025-02-05T13:01:27.283+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); args=(); alias=default
2025-02-05T13:01:27.283+00:00 [DEBUG] CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params ())
2025-02-05T13:01:27.283+00:00 [DEBUG] (0.000) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=(); alias=default
2025-02-05T13:01:27.283+00:00 [DEBUG] CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params ())
2025-02-05T13:01:27.283+00:00 [DEBUG] (0.000) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=(); alias=default
2025-02-05T13:01:27.288+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.289+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.289+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.290+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2025-02-05 13:01:27.289429') RETURNING "django_migrations"."id"; args=('auth', '0001_initial', '2025-02-05 13:01:27.289429'); alias=default
2025-02-05T13:01:27.293+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.293+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.293+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.298+00:00 [DEBUG] CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-02-05T13:01:27.298+00:00 [DEBUG] (0.000) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-02-05T13:01:27.298+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.298+00:00 [DEBUG] CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
2025-02-05T13:01:27.298+00:00 [DEBUG] (0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
2025-02-05T13:01:27.298+00:00 [DEBUG] CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
2025-02-05T13:01:27.299+00:00 [DEBUG] (0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
2025-02-05T13:01:27.303+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.304+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.304+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.305+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2025-02-05 13:01:27.304850') RETURNING "django_migrations"."id"; args=('admin', '0001_initial', '2025-02-05 13:01:27.304850'); alias=default
2025-02-05T13:01:27.308+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.308+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.309+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.314+00:00 [DEBUG] CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
2025-02-05T13:01:27.314+00:00 [DEBUG] (0.000) CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.315+00:00 [DEBUG] INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
2025-02-05T13:01:27.315+00:00 [DEBUG] (0.000) INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; args=(); alias=default
2025-02-05T13:01:27.315+00:00 [DEBUG] DROP TABLE "django_admin_log"; (params ())
2025-02-05T13:01:27.315+00:00 [DEBUG] (0.000) DROP TABLE "django_admin_log"; args=(); alias=default
2025-02-05T13:01:27.315+00:00 [DEBUG] ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
2025-02-05T13:01:27.316+00:00 [DEBUG] (0.001) ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; args=(); alias=default
2025-02-05T13:01:27.316+00:00 [DEBUG] CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
2025-02-05T13:01:27.316+00:00 [DEBUG] (0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
2025-02-05T13:01:27.316+00:00 [DEBUG] CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
2025-02-05T13:01:27.316+00:00 [DEBUG] (0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
2025-02-05T13:01:27.316+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.317+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2025-02-05 13:01:27.317016') RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', '2025-02-05 13:01:27.317016'); alias=default
2025-02-05T13:01:27.317+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.322+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.322+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.322+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.323+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.323+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.333+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.334+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2025-02-05 13:01:27.333425') RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', '2025-02-05 13:01:27.333425'); alias=default
2025-02-05T13:01:27.334+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.338+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.338+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.338+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.338+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.338+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.359+00:00 [DEBUG] CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
2025-02-05T13:01:27.359+00:00 [DEBUG] (0.000) CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); args=None; alias=default
2025-02-05T13:01:27.360+00:00 [DEBUG] INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
2025-02-05T13:01:27.360+00:00 [DEBUG] (0.000) INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; args=(); alias=default
2025-02-05T13:01:27.360+00:00 [DEBUG] DROP TABLE "django_content_type"; (params ())
2025-02-05T13:01:27.360+00:00 [DEBUG] (0.000) DROP TABLE "django_content_type"; args=(); alias=default
2025-02-05T13:01:27.360+00:00 [DEBUG] ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
2025-02-05T13:01:27.361+00:00 [DEBUG] (0.001) ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; args=(); alias=default
2025-02-05T13:01:27.361+00:00 [DEBUG] CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
2025-02-05T13:01:27.361+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
2025-02-05T13:01:27.367+00:00 [DEBUG] ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
2025-02-05T13:01:27.368+00:00 [DEBUG] (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name"; args=(); alias=default
2025-02-05T13:01:27.368+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.369+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2025-02-05 13:01:27.369068') RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', '2025-02-05 13:01:27.369068'); alias=default
2025-02-05T13:01:27.369+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.374+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.375+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.375+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.375+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.375+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.380+00:00 [DEBUG] CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
2025-02-05T13:01:27.380+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.380+00:00 [DEBUG] INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
2025-02-05T13:01:27.380+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; args=(); alias=default
2025-02-05T13:01:27.380+00:00 [DEBUG] DROP TABLE "auth_permission"; (params ())
2025-02-05T13:01:27.380+00:00 [DEBUG] (0.000) DROP TABLE "auth_permission"; args=(); alias=default
2025-02-05T13:01:27.381+00:00 [DEBUG] ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
2025-02-05T13:01:27.381+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; args=(); alias=default
2025-02-05T13:01:27.381+00:00 [DEBUG] CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
2025-02-05T13:01:27.381+00:00 [DEBUG] (0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
2025-02-05T13:01:27.382+00:00 [DEBUG] CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
2025-02-05T13:01:27.382+00:00 [DEBUG] (0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
2025-02-05T13:01:27.382+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.382+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2025-02-05 13:01:27.382377') RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', '2025-02-05 13:01:27.382377'); alias=default
2025-02-05T13:01:27.382+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.387+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.387+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.387+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.387+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.388+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.394+00:00 [DEBUG] CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); (params None)
2025-02-05T13:01:27.395+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.395+00:00 [DEBUG] INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; (params ())
2025-02-05T13:01:27.395+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; args=(); alias=default
2025-02-05T13:01:27.395+00:00 [DEBUG] DROP TABLE "auth_user"; (params ())
2025-02-05T13:01:27.395+00:00 [DEBUG] (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-02-05T13:01:27.395+00:00 [DEBUG] ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-02-05T13:01:27.396+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-02-05T13:01:27.396+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.397+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2025-02-05 13:01:27.396754') RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', '2025-02-05 13:01:27.396754'); alias=default
2025-02-05T13:01:27.397+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.401+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.402+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.402+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.402+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.402+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.406+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.407+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2025-02-05 13:01:27.407142') RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', '2025-02-05 13:01:27.407142'); alias=default
2025-02-05T13:01:27.407+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.411+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.412+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.413+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.413+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.413+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.426+00:00 [DEBUG] CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); (params None)
2025-02-05T13:01:27.427+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); args=None; alias=default
2025-02-05T13:01:27.427+00:00 [DEBUG] INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; (params ())
2025-02-05T13:01:27.427+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; args=(); alias=default
2025-02-05T13:01:27.427+00:00 [DEBUG] DROP TABLE "auth_user"; (params ())
2025-02-05T13:01:27.428+00:00 [DEBUG] (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-02-05T13:01:27.428+00:00 [DEBUG] ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-02-05T13:01:27.429+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-02-05T13:01:27.429+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.430+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2025-02-05 13:01:27.430051') RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', '2025-02-05 13:01:27.430051'); alias=default
2025-02-05T13:01:27.430+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.434+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.434+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.435+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.435+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.435+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.435+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.436+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2025-02-05 13:01:27.435694') RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', '2025-02-05 13:01:27.435694'); alias=default
2025-02-05T13:01:27.436+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.439+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.440+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.440+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.440+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.440+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.446+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.447+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2025-02-05 13:01:27.446642') RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', '2025-02-05 13:01:27.446642'); alias=default
2025-02-05T13:01:27.447+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.451+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.451+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.451+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.451+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.451+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.459+00:00 [DEBUG] CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); (params None)
2025-02-05T13:01:27.459+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); args=None; alias=default
2025-02-05T13:01:27.459+00:00 [DEBUG] INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; (params ())
2025-02-05T13:01:27.459+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; args=(); alias=default
2025-02-05T13:01:27.459+00:00 [DEBUG] DROP TABLE "auth_user"; (params ())
2025-02-05T13:01:27.459+00:00 [DEBUG] (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-02-05T13:01:27.459+00:00 [DEBUG] ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-02-05T13:01:27.460+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-02-05T13:01:27.460+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.461+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2025-02-05 13:01:27.461042') RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', '2025-02-05 13:01:27.461042'); alias=default
2025-02-05T13:01:27.461+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.481+00:00 [DEBUG] (0.020) COMMIT; args=None; alias=default
2025-02-05T13:01:27.481+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.482+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.482+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.482+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.488+00:00 [DEBUG] CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); (params None)
2025-02-05T13:01:27.488+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.488+00:00 [DEBUG] INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; (params ())
2025-02-05T13:01:27.489+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; args=(); alias=default
2025-02-05T13:01:27.489+00:00 [DEBUG] DROP TABLE "auth_user"; (params ())
2025-02-05T13:01:27.489+00:00 [DEBUG] (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-02-05T13:01:27.489+00:00 [DEBUG] ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-02-05T13:01:27.490+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-02-05T13:01:27.490+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.490+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2025-02-05 13:01:27.490384') RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', '2025-02-05 13:01:27.490384'); alias=default
2025-02-05T13:01:27.490+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.494+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.495+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.495+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.495+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.495+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.501+00:00 [DEBUG] CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
2025-02-05T13:01:27.501+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); args=None; alias=default
2025-02-05T13:01:27.501+00:00 [DEBUG] INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
2025-02-05T13:01:27.501+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; args=(); alias=default
2025-02-05T13:01:27.501+00:00 [DEBUG] DROP TABLE "auth_group"; (params ())
2025-02-05T13:01:27.501+00:00 [DEBUG] (0.000) DROP TABLE "auth_group"; args=(); alias=default
2025-02-05T13:01:27.502+00:00 [DEBUG] ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
2025-02-05T13:01:27.502+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_group" RENAME TO "auth_group"; args=(); alias=default
2025-02-05T13:01:27.503+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.503+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2025-02-05 13:01:27.503165') RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', '2025-02-05 13:01:27.503165'); alias=default
2025-02-05T13:01:27.503+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.513+00:00 [DEBUG] (0.010) COMMIT; args=None; alias=default
2025-02-05T13:01:27.513+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.513+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.513+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.514+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.518+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.518+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2025-02-05 13:01:27.518397') RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', '2025-02-05 13:01:27.518397'); alias=default
2025-02-05T13:01:27.518+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.522+00:00 [DEBUG] (0.003) COMMIT; args=None; alias=default
2025-02-05T13:01:27.522+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.522+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.522+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.522+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.527+00:00 [DEBUG] CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); (params None)
2025-02-05T13:01:27.528+00:00 [DEBUG] (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); args=None; alias=default
2025-02-05T13:01:27.528+00:00 [DEBUG] INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; (params ())
2025-02-05T13:01:27.528+00:00 [DEBUG] (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; args=(); alias=default
2025-02-05T13:01:27.528+00:00 [DEBUG] DROP TABLE "auth_user"; (params ())
2025-02-05T13:01:27.528+00:00 [DEBUG] (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-02-05T13:01:27.528+00:00 [DEBUG] ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-02-05T13:01:27.529+00:00 [DEBUG] (0.001) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-02-05T13:01:27.529+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.529+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2025-02-05 13:01:27.529364') RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', '2025-02-05 13:01:27.529364'); alias=default
2025-02-05T13:01:27.529+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.533+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.534+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.534+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.534+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.534+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.535+00:00 [DEBUG] CREATE TABLE "core_pulsar" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "latitude" real NOT NULL, "longitude" real NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL); (params None)
2025-02-05T13:01:27.536+00:00 [DEBUG] (0.000) CREATE TABLE "core_pulsar" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "latitude" real NOT NULL, "longitude" real NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL); args=None; alias=default
2025-02-05T13:01:27.536+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.537+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0001_initial', '2025-02-05 13:01:27.537079') RETURNING "django_migrations"."id"; args=('core', '0001_initial', '2025-02-05 13:01:27.537079'); alias=default
2025-02-05T13:01:27.537+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.541+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.541+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.541+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.541+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.541+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.543+00:00 [DEBUG] CREATE TABLE "core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL, "pulsar_id" bigint NOT NULL REFERENCES "core_pulsar" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-02-05T13:01:27.543+00:00 [DEBUG] (0.000) CREATE TABLE "core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL, "pulsar_id" bigint NOT NULL REFERENCES "core_pulsar" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-02-05T13:01:27.543+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.543+00:00 [DEBUG] CREATE INDEX "core_history_pulsar_id_28d8cbc8" ON "core_history" ("pulsar_id"); (params ())
2025-02-05T13:01:27.543+00:00 [DEBUG] (0.000) CREATE INDEX "core_history_pulsar_id_28d8cbc8" ON "core_history" ("pulsar_id"); args=(); alias=default
2025-02-05T13:01:27.548+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.548+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.548+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.549+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0002_history', '2025-02-05 13:01:27.549077') RETURNING "django_migrations"."id"; args=('core', '0002_history', '2025-02-05 13:01:27.549077'); alias=default
2025-02-05T13:01:27.553+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.553+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.553+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.556+00:00 [DEBUG] CREATE TABLE "new__core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL); (params None)
2025-02-05T13:01:27.556+00:00 [DEBUG] (0.000) CREATE TABLE "new__core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.556+00:00 [DEBUG] INSERT INTO "new__core_history" ("id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp") SELECT "id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp" FROM "core_history"; (params ())
2025-02-05T13:01:27.556+00:00 [DEBUG] (0.000) INSERT INTO "new__core_history" ("id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp") SELECT "id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp" FROM "core_history"; args=(); alias=default
2025-02-05T13:01:27.556+00:00 [DEBUG] DROP TABLE "core_history"; (params ())
2025-02-05T13:01:27.557+00:00 [DEBUG] (0.000) DROP TABLE "core_history"; args=(); alias=default
2025-02-05T13:01:27.557+00:00 [DEBUG] ALTER TABLE "new__core_history" RENAME TO "core_history"; (params ())
2025-02-05T13:01:27.557+00:00 [DEBUG] (0.001) ALTER TABLE "new__core_history" RENAME TO "core_history"; args=(); alias=default
2025-02-05T13:01:27.559+00:00 [DEBUG] CREATE TABLE "new__core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL); (params None)
2025-02-05T13:01:27.559+00:00 [DEBUG] (0.000) CREATE TABLE "new__core_history" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(20) NOT NULL, "galaxy" varchar(20) NOT NULL, "queued_jobs" integer NOT NULL, "running_jobs" integer NOT NULL, "failed_jobs" integer NOT NULL, "timestamp" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.560+00:00 [DEBUG] INSERT INTO "new__core_history" ("id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp") SELECT "id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp" FROM "core_history"; (params ())
2025-02-05T13:01:27.560+00:00 [DEBUG] (0.000) INSERT INTO "new__core_history" ("id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp") SELECT "id", "name", "galaxy", "queued_jobs", "running_jobs", "failed_jobs", "timestamp" FROM "core_history"; args=(); alias=default
2025-02-05T13:01:27.560+00:00 [DEBUG] DROP TABLE "core_history"; (params ())
2025-02-05T13:01:27.560+00:00 [DEBUG] (0.000) DROP TABLE "core_history"; args=(); alias=default
2025-02-05T13:01:27.560+00:00 [DEBUG] ALTER TABLE "new__core_history" RENAME TO "core_history"; (params ())
2025-02-05T13:01:27.560+00:00 [DEBUG] (0.001) ALTER TABLE "new__core_history" RENAME TO "core_history"; args=(); alias=default
2025-02-05T13:01:27.561+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.561+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0003_remove_history_pulsar_alter_history_timestamp', '2025-02-05 13:01:27.561160') RETURNING "django_migrations"."id"; args=('core', '0003_remove_history_pulsar_alter_history_timestamp', '2025-02-05 13:01:27.561160'); alias=default
2025-02-05T13:01:27.561+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.567+00:00 [DEBUG] (0.006) COMMIT; args=None; alias=default
2025-02-05T13:01:27.567+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.567+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.567+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.567+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.569+00:00 [DEBUG] CREATE TABLE "core_rrdpulsar" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL UNIQUE, "rrd_path" varchar(255) NOT NULL, "galaxy" varchar(255) NOT NULL, "latitude" real NOT NULL, "longitude" real NOT NULL); (params None)
2025-02-05T13:01:27.569+00:00 [DEBUG] (0.000) CREATE TABLE "core_rrdpulsar" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(255) NOT NULL UNIQUE, "rrd_path" varchar(255) NOT NULL, "galaxy" varchar(255) NOT NULL, "latitude" real NOT NULL, "longitude" real NOT NULL); args=None; alias=default
2025-02-05T13:01:27.570+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.570+00:00 [DEBUG] (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('core', '0004_rrdpulsar', '2025-02-05 13:01:27.570247') RETURNING "django_migrations"."id"; args=('core', '0004_rrdpulsar', '2025-02-05 13:01:27.570247'); alias=default
2025-02-05T13:01:27.570+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.577+00:00 [DEBUG] (0.006) COMMIT; args=None; alias=default
2025-02-05T13:01:27.577+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.577+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-02-05T13:01:27.577+00:00 [DEBUG] (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-02-05T13:01:27.577+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.579+00:00 [DEBUG] CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
2025-02-05T13:01:27.579+00:00 [DEBUG] (0.000) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None; alias=default
2025-02-05T13:01:27.579+00:00 [DEBUG] (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-02-05T13:01:27.579+00:00 [DEBUG] CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
2025-02-05T13:01:27.579+00:00 [DEBUG] (0.000) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=(); alias=default
2025-02-05T13:01:27.585+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.585+00:00 [DEBUG] (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-02-05T13:01:27.586+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.588+00:00 [DEBUG] (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2025-02-05 13:01:27.587200') RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', '2025-02-05 13:01:27.587200'); alias=default
2025-02-05T13:01:27.594+00:00 [DEBUG] (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-02-05T13:01:27.597+00:00 [DEBUG] (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2025-02-05T13:01:27.617+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-02-05T13:01:27.617+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.618+00:00 [DEBUG] (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
2025-02-05T13:01:27.622+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.623+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
2025-02-05T13:01:27.625+00:00 [DEBUG] (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
2025-02-05T13:01:27.625+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.626+00:00 [DEBUG] (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
2025-02-05T13:01:27.629+00:00 [DEBUG] (0.003) COMMIT; args=None; alias=default
2025-02-05T13:01:27.630+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-02-05T13:01:27.630+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-02-05T13:01:27.630+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.631+00:00 [DEBUG] (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
2025-02-05T13:01:27.636+00:00 [DEBUG] (0.005) COMMIT; args=None; alias=default
2025-02-05T13:01:27.637+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
2025-02-05T13:01:27.637+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
2025-02-05T13:01:27.638+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
2025-02-05T13:01:27.639+00:00 [DEBUG] (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
2025-02-05T13:01:27.639+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.640+00:00 [DEBUG] (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
2025-02-05T13:01:27.644+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.644+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-02-05T13:01:27.644+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-02-05T13:01:27.645+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.645+00:00 [DEBUG] (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
2025-02-05T13:01:27.649+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.650+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
2025-02-05T13:01:27.650+00:00 [DEBUG] (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
2025-02-05T13:01:27.651+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.651+00:00 [DEBUG] (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
2025-02-05T13:01:27.655+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.655+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-02-05T13:01:27.656+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-02-05T13:01:27.656+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.656+00:00 [DEBUG] (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
2025-02-05T13:01:27.660+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.661+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
2025-02-05T13:01:27.662+00:00 [DEBUG] (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
2025-02-05T13:01:27.662+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.662+00:00 [DEBUG] (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
2025-02-05T13:01:27.666+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.667+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-02-05T13:01:27.667+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',); alias=default
2025-02-05T13:01:27.668+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_extensions'; args=('django_extensions',); alias=default
2025-02-05T13:01:27.668+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'core'; args=('core',); alias=default
2025-02-05T13:01:27.669+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.669+00:00 [DEBUG] (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('core', 'pulsar'), ('core', 'history'), ('core', 'rrdpulsar') RETURNING "django_content_type"."id"; args=('core', 'pulsar', 'core', 'history', 'core', 'rrdpulsar'); alias=default
2025-02-05T13:01:27.673+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.673+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'core' AND "django_content_type"."model" = 'pulsar') LIMIT 21; args=('core', 'pulsar'); alias=default
2025-02-05T13:01:27.674+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'core' AND "django_content_type"."model" = 'history') LIMIT 21; args=('core', 'history'); alias=default
2025-02-05T13:01:27.675+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'core' AND "django_content_type"."model" = 'rrdpulsar') LIMIT 21; args=('core', 'rrdpulsar'); alias=default
2025-02-05T13:01:27.675+00:00 [DEBUG] (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 7); alias=default
2025-02-05T13:01:27.676+00:00 [DEBUG] (0.000) BEGIN; args=None; alias=default
2025-02-05T13:01:27.676+00:00 [DEBUG] (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add pulsar', 7, 'add_pulsar'), ('Can change pulsar', 7, 'change_pulsar'), ('Can delete pulsar', 7, 'delete_pulsar'), ('Can view pulsar', 7, 'view_pulsar'), ('Can add history', 8, 'add_history'), ('Can change history', 8, 'change_history'), ('Can delete history', 8, 'delete_history'), ('Can view history', 8, 'view_history'), ('Can add rrd pulsar', 9, 'add_rrdpulsar'), ('Can change rrd pulsar', 9, 'change_rrdpulsar'), ('Can delete rrd pulsar', 9, 'delete_rrdpulsar'), ('Can view rrd pulsar', 9, 'view_rrdpulsar') RETURNING "auth_permission"."id"; args=('Can add pulsar', 7, 'add_pulsar', 'Can change pulsar', 7, 'change_pulsar', 'Can delete pulsar', 7, 'delete_pulsar', 'Can view pulsar', 7, 'view_pulsar', 'Can add history', 8, 'add_history', 'Can change history', 8, 'change_history', 'Can delete history', 8, 'delete_history', 'Can view history', 8, 'view_history', 'Can add rrd pulsar', 9, 'add_rrdpulsar', 'Can change rrd pulsar', 9, 'change_rrdpulsar', 'Can delete rrd pulsar', 9, 'delete_rrdpulsar', 'Can view rrd pulsar', 9, 'view_rrdpulsar'); alias=default
2025-02-05T13:01:27.681+00:00 [DEBUG] (0.004) COMMIT; args=None; alias=default
2025-02-05T13:01:27.683+00:00 [DEBUG] (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'core'; args=('core',); alias=default
